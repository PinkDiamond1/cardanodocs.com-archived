{
    "definitions": {
        "ApiVersion": {
            "enum": [
                "ApiVersion0"
            ],
            "type": "string"
        },
        "ApplicationName": {
            "properties": {
                "getApplicationName": {
                    "type": "string"
                }
            },
            "required": [
                "getApplicationName"
            ],
            "type": "object"
        },
        "BackupPhrase": {
            "properties": {
                "bpToList": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "bpToList"
            ],
            "type": "object"
        },
        "BlockCount": {
            "properties": {
                "getBlockCount": {
                    "maximum": 18446744073709551615,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "getBlockCount"
            ],
            "type": "object"
        },
        "BlockVersion": {
            "properties": {
                "bvAlt": {
                    "maximum": 255,
                    "minimum": 0,
                    "type": "integer"
                },
                "bvMajor": {
                    "maximum": 65535,
                    "minimum": 0,
                    "type": "integer"
                },
                "bvMinor": {
                    "maximum": 65535,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "bvMajor",
                "bvMinor",
                "bvAlt"
            ],
            "type": "object"
        },
        "CAccount": {
            "properties": {
                "caAddresses": {
                    "items": {
                        "$ref": "#/definitions/CAddress"
                    },
                    "type": "array"
                },
                "caAmount": {
                    "$ref": "#/definitions/CCoin"
                },
                "caId": {
                    "$ref": "#/definitions/CAccountId"
                },
                "caMeta": {
                    "$ref": "#/definitions/CAccountMeta"
                }
            },
            "required": [
                "caId",
                "caMeta",
                "caAddresses",
                "caAmount"
            ],
            "type": "object"
        },
        "CAccountId": {
            "type": "string"
        },
        "CAccountInit": {
            "properties": {
                "caInitMeta": {
                    "$ref": "#/definitions/CAccountMeta"
                },
                "caInitWId": {
                    "$ref": "#/definitions/CId"
                }
            },
            "required": [
                "caInitMeta",
                "caInitWId"
            ],
            "type": "object"
        },
        "CAccountMeta": {
            "properties": {
                "caName": {
                    "type": "string"
                }
            },
            "required": [
                "caName"
            ],
            "type": "object"
        },
        "CAddress": {
            "properties": {
                "cadAmount": {
                    "$ref": "#/definitions/CCoin"
                },
                "cadId": {
                    "$ref": "#/definitions/CId"
                },
                "cadIsChange": {
                    "type": "boolean"
                },
                "cadIsUsed": {
                    "type": "boolean"
                }
            },
            "required": [
                "cadId",
                "cadAmount",
                "cadIsUsed",
                "cadIsChange"
            ],
            "type": "object"
        },
        "CCoin": {
            "properties": {
                "getCCoin": {
                    "type": "string"
                }
            },
            "required": [
                "getCCoin"
            ],
            "type": "object"
        },
        "CId": {
            "type": "string"
        },
        "CInitialized": {
            "properties": {
                "cPreInit": {
                    "maximum": 18446744073709551615,
                    "minimum": 0,
                    "type": "integer"
                },
                "cTotalTime": {
                    "maximum": 18446744073709551615,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "cTotalTime",
                "cPreInit"
            ],
            "type": "object"
        },
        "CPaperVendWalletRedeem": {
            "properties": {
                "pvBackupPhrase": {
                    "$ref": "#/definitions/BackupPhrase"
                },
                "pvSeed": {
                    "type": "string"
                },
                "pvWalletId": {
                    "$ref": "#/definitions/CAccountId"
                }
            },
            "required": [
                "pvWalletId",
                "pvSeed",
                "pvBackupPhrase"
            ],
            "type": "object"
        },
        "CProfile": {
            "properties": {
                "cpLocale": {
                    "type": "string"
                }
            },
            "required": [
                "cpLocale"
            ],
            "type": "object"
        },
        "CPtxCondition": {
            "enum": [
                "CPtxCreating",
                "CPtxApplying",
                "CPtxInBlocks",
                "CPtxWontApply",
                "CPtxNotTracked"
            ],
            "type": "string"
        },
        "CTx": {
            "properties": {
                "ctAmount": {
                    "$ref": "#/definitions/CCoin"
                },
                "ctCondition": {
                    "$ref": "#/definitions/CPtxCondition"
                },
                "ctConfirmations": {
                    "maximum": 18446744073709551615,
                    "minimum": 0,
                    "type": "integer"
                },
                "ctId": {
                    "$ref": "#/definitions/CTxId"
                },
                "ctInputs": {
                    "items": {
                        "items": [
                            {
                                "$ref": "#/definitions/CId"
                            },
                            {
                                "$ref": "#/definitions/CCoin"
                            }
                        ],
                        "maxItems": 2,
                        "minItems": 2,
                        "type": "array"
                    },
                    "type": "array"
                },
                "ctIsLocal": {
                    "type": "boolean"
                },
                "ctIsOutgoing": {
                    "type": "boolean"
                },
                "ctMeta": {
                    "$ref": "#/definitions/CTxMeta"
                },
                "ctOutputs": {
                    "items": {
                        "items": [
                            {
                                "$ref": "#/definitions/CId"
                            },
                            {
                                "$ref": "#/definitions/CCoin"
                            }
                        ],
                        "maxItems": 2,
                        "minItems": 2,
                        "type": "array"
                    },
                    "type": "array"
                }
            },
            "required": [
                "ctId",
                "ctAmount",
                "ctConfirmations",
                "ctMeta",
                "ctInputs",
                "ctOutputs",
                "ctIsLocal",
                "ctIsOutgoing",
                "ctCondition"
            ],
            "type": "object"
        },
        "CTxId": {
            "type": "string"
        },
        "CTxMeta": {
            "properties": {
                "ctmDate": {
                    "multipleOf": 1e-12,
                    "type": "number"
                }
            },
            "required": [
                "ctmDate"
            ],
            "type": "object"
        },
        "CUpdateInfo": {
            "properties": {
                "cuiBlockVesion": {
                    "$ref": "#/definitions/BlockVersion"
                },
                "cuiImplicit": {
                    "type": "boolean"
                },
                "cuiNegativeStake": {
                    "$ref": "#/definitions/CCoin"
                },
                "cuiPositiveStake": {
                    "$ref": "#/definitions/CCoin"
                },
                "cuiScriptVersion": {
                    "maximum": 65535,
                    "minimum": 0,
                    "type": "integer"
                },
                "cuiSoftwareVersion": {
                    "$ref": "#/definitions/SoftwareVersion"
                },
                "cuiVotesAgainst": {
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "type": "integer"
                },
                "cuiVotesFor": {
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "type": "integer"
                }
            },
            "required": [
                "cuiSoftwareVersion",
                "cuiBlockVesion",
                "cuiScriptVersion",
                "cuiImplicit",
                "cuiVotesFor",
                "cuiVotesAgainst",
                "cuiPositiveStake",
                "cuiNegativeStake"
            ],
            "type": "object"
        },
        "CWallet": {
            "properties": {
                "cwAccountsNumber": {
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "type": "integer"
                },
                "cwAmount": {
                    "$ref": "#/definitions/CCoin"
                },
                "cwHasPassphrase": {
                    "type": "boolean"
                },
                "cwId": {
                    "$ref": "#/definitions/CId"
                },
                "cwMeta": {
                    "$ref": "#/definitions/CWalletMeta"
                },
                "cwPassphraseLU": {
                    "multipleOf": 1e-12,
                    "type": "number"
                }
            },
            "required": [
                "cwId",
                "cwMeta",
                "cwAccountsNumber",
                "cwAmount",
                "cwHasPassphrase",
                "cwPassphraseLU"
            ],
            "type": "object"
        },
        "CWalletAssurance": {
            "enum": [
                "CWAStrict",
                "CWANormal"
            ],
            "type": "string"
        },
        "CWalletInit": {
            "properties": {
                "cwBackupPhrase": {
                    "$ref": "#/definitions/BackupPhrase"
                },
                "cwInitMeta": {
                    "$ref": "#/definitions/CWalletMeta"
                }
            },
            "required": [
                "cwInitMeta",
                "cwBackupPhrase"
            ],
            "type": "object"
        },
        "CWalletMeta": {
            "properties": {
                "cwAssurance": {
                    "$ref": "#/definitions/CWalletAssurance"
                },
                "cwName": {
                    "type": "string"
                },
                "cwUnit": {
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "type": "integer"
                }
            },
            "required": [
                "cwName",
                "cwAssurance",
                "cwUnit"
            ],
            "type": "object"
        },
        "CWalletRedeem": {
            "properties": {
                "crSeed": {
                    "type": "string"
                },
                "crWalletId": {
                    "$ref": "#/definitions/CAccountId"
                }
            },
            "required": [
                "crWalletId",
                "crSeed"
            ],
            "type": "object"
        },
        "ChainDifficulty": {
            "properties": {
                "getChainDifficulty": {
                    "$ref": "#/definitions/BlockCount"
                }
            },
            "required": [
                "getChainDifficulty"
            ],
            "type": "object"
        },
        "ClientInfo": {
            "properties": {
                "ciApiVersion": {
                    "$ref": "#/definitions/ApiVersion"
                },
                "ciCabalVersion": {
                    "$ref": "#/definitions/Version"
                },
                "ciGitRevision": {
                    "type": "string"
                },
                "ciSoftwareVersion": {
                    "$ref": "#/definitions/SoftwareVersion"
                }
            },
            "required": [
                "ciApiVersion",
                "ciSoftwareVersion",
                "ciCabalVersion",
                "ciGitRevision"
            ],
            "type": "object"
        },
        "FilePath": {
            "description": "Path to file.\n Note that it is represented as JSON-string, one may need to properly escape content. For instance:\n curl ... -X \"\\\\\"1.key\"\\\\\".\nAlso, when on Windows, don't forget to double-escape  backslashes, e.g.  \"C:\\\\\\\\\\\\\\\\keys\\\\\\\\1.key\"",
            "example": "keys/1.key",
            "type": "string"
        },
        "InputSelectionPolicy": {
            "enum": [
                "OptimizeForSecurity",
                "OptimizeForHighThroughput"
            ],
            "example": {
                "groupingPolicy": "OptimizeForHighThroughput"
            },
            "type": "string"
        },
        "NewBatchPayment": {
            "example": {
                "from": "<walletId@accountId>",
                "policy": {
                    "groupingPolicy": "OptimizeForSecurity"
                },
                "to": [
                    {
                        "address": "<address>",
                        "amount": 228
                    },
                    {
                        "address": "<address>",
                        "amount": 701
                    }
                ]
            },
            "properties": {
                "from": {
                    "type": "string"
                },
                "policy": {
                    "properties": {
                        "groupingPolicy": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "groupingPolicy"
                    ],
                    "type": "object"
                },
                "to": {
                    "items": {
                        "properties": {
                            "address": {
                                "type": "string"
                            },
                            "amount": {
                                "type": "number"
                            }
                        },
                        "required": [
                            "amount",
                            "address"
                        ],
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "required": [
                "to",
                "from",
                "policy"
            ],
            "type": "object"
        },
        "PendingTxsSummary": {
            "type": "string"
        },
        "SoftwareVersion": {
            "properties": {
                "svAppName": {
                    "$ref": "#/definitions/ApplicationName"
                },
                "svNumber": {
                    "maximum": 4294967295,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "svAppName",
                "svNumber"
            ],
            "type": "object"
        },
        "SyncProgress": {
            "properties": {
                "_spLocalCD": {
                    "$ref": "#/definitions/ChainDifficulty"
                },
                "_spNetworkCD": {
                    "$ref": "#/definitions/ChainDifficulty"
                },
                "_spPeers": {
                    "maximum": 18446744073709551615,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "_spLocalCD",
                "_spPeers"
            ],
            "type": "object"
        },
        "Version": {
            "properties": {
                "versionBranch": {
                    "items": {
                        "maximum": 9223372036854775807,
                        "minimum": -9223372036854775808,
                        "type": "integer"
                    },
                    "type": "array"
                },
                "versionTags": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "versionBranch",
                "versionTags"
            ],
            "type": "object"
        },
        "WalletStateSnapshot": {
            "type": "string"
        }
    },
    "host": "127.0.0.1:8090",
    "info": {
        "description": "This is the specification for the Cardano Wallet API, automatically generated as a [Swagger](https://swagger.io/) spec from the [Servant](http://haskell-servant.readthedocs.io/en/stable/) API of [Cardano](https://github.com/input-output-hk/cardano-sl).\n\nSoftware Version   | Git Revision\n-------------------|-------------------\ncardano-sl:12 | c6a50c2a736d72da6be93072b9d627407e4d957e\n",
        "license": {
            "name": "MIT",
            "url": "https://raw.githubusercontent.com/input-output-hk/cardano-sl/develop/lib/LICENSE"
        },
        "title": "Cardano Wallet DEPRECATED API",
        "version": "1.4.1"
    },
    "paths": {
        "/api/accounts": {
            "get": {
                "parameters": [
                    {
                        "in": "query",
                        "name": "accountId",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/CAccount"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Invalid `accountId`"
                    }
                },
                "summary": "Get information about all available accounts.",
                "tags": [
                    "V0 (Deprecated)"
                ]
            },
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "passphrase",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CAccountInit"
                        }
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CAccount"
                        }
                    },
                    "400": {
                        "description": "Invalid `body` or `passphrase`"
                    }
                },
                "summary": "Create a new account in given wallet.",
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/accounts/{accountId}": {
            "delete": {
                "parameters": [
                    {
                        "format": "walletSetAddress@walletKeyIndex",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": "`accountId` not found"
                    }
                },
                "summary": "Delete an account by ID.",
                "tags": [
                    "V0 (Deprecated)"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "format": "walletSetAddress@walletKeyIndex",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CAccount"
                        }
                    },
                    "404": {
                        "description": "`accountId` not found"
                    }
                },
                "summary": "Get information about a account by its ID",
                "tags": [
                    "V0 (Deprecated)"
                ]
            },
            "put": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "format": "walletSetAddress@walletKeyIndex",
                        "in": "path",
                        "name": "accountId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CAccountMeta"
                        }
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CAccount"
                        }
                    },
                    "400": {
                        "description": "Invalid `body`"
                    },
                    "404": {
                        "description": "`accountId` not found"
                    }
                },
                "summary": "Update account's meta information.",
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/addresses": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "passphrase",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CAccountId"
                        }
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CAddress"
                        }
                    },
                    "400": {
                        "description": "Invalid `body` or `passphrase`"
                    }
                },
                "summary": "Create a new address in given account.",
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/addresses/{address}": {
            "get": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "address",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "404": {
                        "description": "`address` not found"
                    }
                },
                "summary": "Returns True if given address is valid, False otherwise.",
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/backup/export/{walletId}": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "description": "Wallet may be later restored from this file with  endpoint above.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "walletId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FilePath"
                        }
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Invalid `body`"
                    },
                    "404": {
                        "description": "`walletId` not found"
                    }
                },
                "summary": "Export full information about wallet to a given file",
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/backup/import": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FilePath"
                        }
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CWallet"
                        }
                    },
                    "400": {
                        "description": "Invalid `body`"
                    }
                },
                "summary": "Import full information about wallet from a given file.",
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/info": {
            "get": {
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ClientInfo"
                        }
                    }
                },
                "summary": "Get general information about this service.",
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/papervend/redemptions/ada": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "passphrase",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CPaperVendWalletRedeem"
                        }
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CTx"
                        }
                    },
                    "400": {
                        "description": "Invalid `body` or `passphrase`"
                    }
                },
                "summary": "Redeem ADA, paper vending.",
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/profile": {
            "get": {
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CProfile"
                        }
                    }
                },
                "summary": "Get user profile's meta data.",
                "tags": [
                    "V0 (Deprecated)"
                ]
            },
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CProfile"
                        }
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CProfile"
                        }
                    },
                    "400": {
                        "description": "Invalid `body`"
                    }
                },
                "summary": "Update user profile.",
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/redemptions/ada": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "passphrase",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CWalletRedeem"
                        }
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CTx"
                        }
                    },
                    "400": {
                        "description": "Invalid `body` or `passphrase`"
                    }
                },
                "summary": "Redeem ADA.",
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/reporting/initialized": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CInitialized"
                        }
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Invalid `body`"
                    }
                },
                "summary": "Send node's report on initialization time.",
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/settings/slots/duration": {
            "get": {
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "maximum": 18446744073709551615,
                            "minimum": 0,
                            "type": "integer"
                        }
                    }
                },
                "summary": "Get blockchain slot duration in milliseconds.",
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/settings/sync/progress": {
            "get": {
                "description": "Fetch info about local chain difficulty, network chain difficulty and connected peers.",
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SyncProgress"
                        }
                    }
                },
                "summary": "Current sync progress",
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/settings/time/difference": {
            "get": {
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "integer"
                        }
                    }
                },
                "summary": "Get local time difference in microseconds.",
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/settings/version": {
            "get": {
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SoftwareVersion"
                        }
                    }
                },
                "summary": "Get current version of the node.",
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/system/shutdown": {
            "post": {
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "summary": "Request a shutdown from node.",
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/test/reset": {
            "post": {
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "summary": "Clear wallet state and remove all secret key.",
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/test/state": {
            "get": {
                "produces": [
                    "application/octet-stream"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WalletStateSnapshot"
                        }
                    }
                },
                "summary": "Print wallet state as JSON",
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/txs/fee/{from}/{to}/{amount}": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "description": "Evaluate fee which would be used for transaction created with given parameters. Note that fee may change on any operation on wallet occurs. Transaction will not be actually created.",
                "parameters": [
                    {
                        "format": "walletSetAddress@walletKeyIndex",
                        "in": "path",
                        "name": "from",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "to",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "maximum": 18446744073709551615,
                        "minimum": 0,
                        "name": "amount",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InputSelectionPolicy"
                        }
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CCoin"
                        }
                    },
                    "400": {
                        "description": "Invalid `body`"
                    },
                    "404": {
                        "description": "`from` or `to` or `amount` not found"
                    }
                },
                "summary": "Estimate fees for performing given transaction.",
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/txs/histories": {
            "get": {
                "parameters": [
                    {
                        "in": "query",
                        "name": "walletId",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "walletSetAddress@walletKeyIndex",
                        "in": "query",
                        "name": "accountId",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "address",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "maximum": 18446744073709551615,
                        "minimum": 0,
                        "name": "skip",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "maximum": 18446744073709551615,
                        "minimum": 0,
                        "name": "limit",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "items": [
                                {
                                    "items": {
                                        "$ref": "#/definitions/CTx"
                                    },
                                    "type": "array"
                                },
                                {
                                    "maximum": 18446744073709551615,
                                    "minimum": 0,
                                    "type": "integer"
                                }
                            ],
                            "maxItems": 2,
                            "minItems": 2,
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Invalid `limit` or `skip` or `address` or `accountId` or `walletId`"
                    }
                },
                "summary": "Get the history of transactions.",
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/txs/payments/batch": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "passphrase",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NewBatchPayment"
                        }
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CTx"
                        }
                    },
                    "400": {
                        "description": "Invalid `body` or `passphrase`"
                    }
                },
                "summary": "Create a new payment transaction (can send to multiple recipients).",
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/txs/payments/{from}/{to}/{amount}": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "passphrase",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "walletSetAddress@walletKeyIndex",
                        "in": "path",
                        "name": "from",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "to",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "maximum": 18446744073709551615,
                        "minimum": 0,
                        "name": "amount",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InputSelectionPolicy"
                        }
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CTx"
                        }
                    },
                    "400": {
                        "description": "Invalid `body` or `passphrase`"
                    },
                    "404": {
                        "description": "`from` or `to` or `amount` not found"
                    }
                },
                "summary": "Create a new payment transaction.",
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/txs/pending/summary": {
            "get": {
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/PendingTxsSummary"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Get the pending tx summaries.",
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/txs/resubmission/cancel": {
            "post": {
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "summary": "Cancel all transactions in CPtxApplying condition (unconfirmed).",
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/txs/resubmission/cancelsingle/{transaction}": {
            "post": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "transaction",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": "`transaction` not found"
                    }
                },
                "summary": "Cancel specific transaction in CPtxApplying condition.",
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/txs/resubmission/reset": {
            "get": {
                "description": "For all transactions in CPtxWontApply condition, reset them to CPtxApplying condition so that they will be passed to resubmition",
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "summary": "Clear the 'do not resubmit' flag from transactions that have it.",
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/update": {
            "get": {
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CUpdateInfo"
                        }
                    }
                },
                "summary": "Get information about the next update.",
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/update/apply": {
            "post": {
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "summary": "Apply last update.",
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/update/postpone": {
            "post": {
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "summary": "Postpone last update.",
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/wallets": {
            "get": {
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/CWallet"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Get information about all available wallets.",
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/wallets/keys": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "passphrase",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FilePath"
                        }
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CWallet"
                        }
                    },
                    "400": {
                        "description": "Invalid `body` or `passphrase`"
                    }
                },
                "summary": "Import user's secret key from the path to generate wallet.",
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/wallets/new": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "passphrase",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CWalletInit"
                        }
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CWallet"
                        }
                    },
                    "400": {
                        "description": "Invalid `body` or `passphrase`"
                    }
                },
                "summary": "Create a new wallet.",
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/wallets/password/{walletId}": {
            "post": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "walletId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "old",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "new",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Invalid `new` or `old`"
                    },
                    "404": {
                        "description": "`walletId` not found"
                    }
                },
                "summary": "Change passphrase of given wallet.",
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/wallets/restore": {
            "post": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "passphrase",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CWalletInit"
                        }
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CWallet"
                        }
                    },
                    "400": {
                        "description": "Invalid `body` or `passphrase`"
                    }
                },
                "summary": "Restore existing wallet.",
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        },
        "/api/wallets/{walletId}": {
            "delete": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "walletId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": "`walletId` not found"
                    }
                },
                "summary": "Delete given wallet with all contained accounts.",
                "tags": [
                    "V0 (Deprecated)"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "in": "path",
                        "name": "walletId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CWallet"
                        }
                    },
                    "404": {
                        "description": "`walletId` not found"
                    }
                },
                "summary": "Get information about a wallet by its ID (address).",
                "tags": [
                    "V0 (Deprecated)"
                ]
            },
            "put": {
                "consumes": [
                    "application/json;charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "walletId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CWalletMeta"
                        }
                    }
                ],
                "produces": [
                    "application/json;charset=utf-8"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CWallet"
                        }
                    },
                    "400": {
                        "description": "Invalid `body`"
                    },
                    "404": {
                        "description": "`walletId` not found"
                    }
                },
                "summary": "Update wallet's meta information.",
                "tags": [
                    "V0 (Deprecated)"
                ]
            }
        }
    },
    "swagger": "2.0"
}
